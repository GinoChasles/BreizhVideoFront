{"version":3,"sources":["components/Film.js","components/Village.js","App.js","index.js"],"names":["data","id","TITLE","DESCRIPTION","RELEASE_YEAR","LENGTH","Film","Accordion","map","Card","Header","Perso","eventKey","Collapse","Body","children","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","type","style","backgroundColor","onClick","Village","apiUrl","keys","k","push","header","key","index","Button","href","row","i","data-index","App","to","path","name","post_code","fetch","headers","mode","method","body","JSON","stringify","then","response","json","datas","console","log","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3acbf10.chunk.js","sourcesContent":["import {React, useContext} from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport {Button, useAccordionToggle} from 'react-bootstrap'\r\n\r\n\r\n//données simulées\r\nconst data=[{id:1, TITLE:\"academy dinosaur\",DESCRIPTION:\"\tA Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies\" ,RELEASE_YEAR:2006,LENGTH:86},\r\n{id: 2,TITLE:\"ace goldfinger\",DESCRIPTION:\"A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China\" ,RELEASE_YEAR:2006,LENGTH:48},\r\n{id: 3,TITLE:\"ADAPTATION HOLES\",DESCRIPTION:\"\tA Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory\" ,RELEASE_YEAR:2006,LENGTH:50}]\r\n\r\nexport default function Film() {\r\n    return (\r\n        <Accordion>\r\n            {/* on crée une card pour chaque objet de notre data (idéalement l'api...) avec le card header pour le nom du film et lorsqu'on clique dessus on fait apparaitre le card body qui contient le reste des informations du film*/}\r\n            {data.map((data)=>\r\n        <Card key={data.id}>\r\n            <Card.Header>\r\n                    {data.TITLE}\r\n                <Perso eventKey={data.id} />\r\n            </Card.Header>\r\n        <Accordion.Collapse eventKey={data.id}>\r\n            <Card.Body>\r\n                <p>année de sortie : {data.RELEASE_YEAR}</p>\r\n                <p>durée : {data.LENGTH} min</p>\r\n                <p>{data.DESCRIPTION}</p>\r\n            </Card.Body>\r\n        </Accordion.Collapse>\r\n        </Card>)}\r\n</Accordion>\r\n    )\r\n}\r\n\r\n//fonction permettant la personnalisation du bouton permettant d'afficher ou non le card body de notre card\r\nfunction Perso({ children, eventKey, callback }) {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nexport default function Village({data,apiUrl}) {\r\n    //on récupère les keys de l'objet\r\n    const keys = []\r\n    for(let k in data[0]){\r\n        keys.push(k)\r\n    }\r\n    //pour chaque key on fait une case header pour nos colonnes\r\n    const header = keys.map((key, index) => <th key={index}>{key}</th>)\r\n    return (\r\n        <>\r\n        <Button id=\"ajout\" href=\"#\" >Ajouter un village</Button>\r\n        <table>\r\n            <thead>\r\n                {/* permet d'obtenir la case vide au dessus des liens update et delete tout en gardant le css */}\r\n              <tr>{header}<th>&nbsp;</th></tr>\r\n            </thead>\r\n                 <tbody>\r\n            {/*pour chaque objet dans notre data on vient créer une ligne affichant chacune de ses keys avec sa valeur associé ainsi que le lien de l'api pour udapte ou delete avec son id dans le lien*/}\r\n                {\r\n                data.map((row, i) => (\r\n                    <tr key={i} data-index={i} >\r\n                       {\r\n                       keys.map((key, index) => <th key={index}>{row[key]}</th>)\r\n                        }\r\n                        <th><a href={apiUrl + `/${i}/update`}>update</a>\r\n\r\n                        <a href={apiUrl + `/${i}/delete`}>delete</a>\r\n                        </th>\r\n                    </tr>\r\n                ))\r\n                }\r\n            </tbody>\r\n\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport './App.css';\r\nimport Film from \"./components/Film\"\r\nimport Village from \"./components/Village\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/evenements\">Evénements</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/films\">Films</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/villages\">Villages</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/evenements\">\r\n\r\n          </Route>\r\n          <Route path=\"/films\">\r\n            <Film/>\r\n          </Route>\r\n          <Route path=\"/villages\">\r\n           <Village data={data} apiUrl={\"http://localhost:8080/breizvideo/villages\"} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <h2>Bienvenue sur le site de BreizhVidéo !</h2>\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst data = [\r\n  {name:'nantes', post_code:'44300'},\r\n  {name:'brest', post_code:'32300'},\r\n  {name:'nantes', post_code:'44300'},\r\n  {name:'nantes', post_code:'44300'},\r\n  {name:'nantes', post_code:'44300'}\r\n]\r\n\r\nfetch('http://localhost:8080/breizhvideo/villages', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            mode: 'no-cors',\r\n            method: 'GET',\r\n            body: JSON.stringify()\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((datas) => {\r\n                console.log(datas);\r\n            })\r\n            .catch(error => console.log(error));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}